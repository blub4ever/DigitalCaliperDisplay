

/*
 *
 * Arial18
 *
 * created with FontCreator
 * written by F. Maximilian Thiele
 *
 * http://www.apetech.de/fontCreator
 * me@apetech.de
 *
 * File Name           : Arial18.h
 * Date                : 26.12.2014
 * Font size in bytes  : 1267
 * Font width          : 12
 * Font height         : 13
 * Font first char     : 45
 * Font last char      : 58
 * Font used chars     : 13
 *
 * The font data are defined as
 *
 * struct _FONT_ {
 *     uint16_t   font_Size_in_Bytes_over_all_included_Size_it_self;
 *     uint8_t    font_Width_in_Pixel_for_fixed_drawing;
 *     uint8_t    font_Height_in_Pixel_for_all_characters;
 *     unit8_t    font_First_Char;
 *     uint8_t    font_Char_Count;
 *
 *     uint8_t    font_Char_Widths[font_Last_Char - font_First_Char +1];
 *                  // for each character the separate width in pixels,
 *                  // characters < 128 have an implicit virtual right empty row
 *
 *     uint8_t    font_data[];
 *                  // bit field of all characters
 */

#include <inttypes.h>
#include <avr/pgmspace.h>

#ifndef ARIAL18_H
#define ARIAL18_H

#define ARIAL18_WIDTH 12
#define ARIAL18_HEIGHT 13

const static uint8_t Arial18[] PROGMEM = {
    0x04, 0xF3, // size
    0x0C, // width
    0x0D, // height
    0x2D, // first char
    0x0D, // char count
    
    // char widths
    0x08, 0x02, 0x05, 0x08, 0x08, 0x08, 0x08, 0x09, 0x08, 0x08, 
    0x08, 0x08, 0x08, 
    
    // font data
    0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00, // 45
    0x00, 0x00, 0xC0, 0xC0, // 46
    0x00, 0x00, 0xE0, 0xFC, 0x1F, 0xC0, 0xF8, 0x38, 0x00, 0x00, // 47
    0xFC, 0xFE, 0x07, 0x03, 0x03, 0x07, 0xFE, 0xFC, 0x38, 0x78, 0xE0, 0xC0, 0xC0, 0xE0, 0x78, 0x38, // 48
    0x18, 0x0C, 0x06, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xF8, 0x00, 0x00, 0x00, // 49
    0x0C, 0x0E, 0x07, 0x03, 0x83, 0xC7, 0x7E, 0x3C, 0xC0, 0xE0, 0xF0, 0xD8, 0xC8, 0xC0, 0xC0, 0xC0, // 50
    0x04, 0x06, 0x03, 0x63, 0x63, 0x7E, 0xDC, 0x80, 0x30, 0x70, 0xC0, 0xC0, 0xC0, 0xC0, 0x78, 0x38, // 51
    0x80, 0xC0, 0x70, 0x38, 0x0E, 0xFF, 0xFF, 0x00, 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0xF8, 0xF8, 0x18, 0x18, // 52
    0x78, 0x7F, 0x27, 0x33, 0x33, 0x33, 0xE3, 0xC0, 0x30, 0x70, 0xC0, 0xC0, 0xC0, 0xC0, 0x78, 0x38, // 53
    0xF8, 0xFE, 0xC7, 0x63, 0x63, 0x63, 0xC6, 0x84, 0x18, 0x78, 0xE0, 0xC0, 0xC0, 0xC0, 0x78, 0x38, // 54
    0x03, 0x03, 0x03, 0xC3, 0xF3, 0x3B, 0x0F, 0x03, 0x00, 0x00, 0xE0, 0xF8, 0x18, 0x00, 0x00, 0x00, // 55
    0x9C, 0xFE, 0x63, 0x63, 0x63, 0x63, 0xFE, 0x9C, 0x38, 0x78, 0xC0, 0xC0, 0xC0, 0xC0, 0x78, 0x38, // 56
    0x3C, 0x7E, 0xC3, 0xC3, 0xC3, 0x63, 0xFE, 0xFC, 0x20, 0x60, 0xC0, 0xC0, 0xC0, 0xE0, 0x78, 0x18 // 57
    
};

#endif
